[metadata]
compileSdk = 32
targetSdk = 32
minSdk = 21

[versions]
versionCode = "1"
versionName = "1.0"
coreKtx = "1.7.0"
appcompat = "1.4.2"
material = "1.6.1"
fragmentKtx = "1.4.1"
lifecycle = "2.4.1"
room = "2.4.2"
hiltCore = "2.41"
hilt = "2.43.2"
okhttp = "4.10.0"
retrofit = "2.9.0"
mockwebserver = "4.6.0"
timber = "4.7.1"
arrow = "1.0.1"
coroutines = "1.6.2"
mockk = "1.10.5"
junit = "4.13.2"
junitExt = "1.1.3"
espresso = "3.4.0"
agp = "7.2.2"
kotlin = "1.6.10"

[libraries]
coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
fragmentKtx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
material = { module = "com.google.android.material:material", version.ref = "material" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltCore" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltCore" }
androidx-hilt = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt" }
hilt-androidTest = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
gsonConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
junit = { module = "junit:junit", version.ref = "junit" }
junitExt = { module = "androidx.test.ext:junit", version.ref = "junitExt" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }

[bundles]
coroutines = ["coroutines-android", "coroutines-core"]
androidx = ["coreKtx", "appcompat"]
okhttp = ["okhttp", "loggingInterceptor"]
retrofit = ["retrofit", "gsonConverter"]

[plugins]
android = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }